@model MineSweeper.Models.ViewModels.PlayViewModel

@{
    ViewData["Title"] = "Сапер";
}

<style>
    .game-board {
        border-spacing: 0;
    }

        .game-board td {
            width: 30px;
            height: 30px;
            text-align: center;
            vertical-align: middle;
            border: 1px solid #ccc;
            font-weight: bold;
            font-size: 16px;
        }

    .cell-btn {
        width: 100%;
        height: 100%;
        border: 2px outset #eee;
        background-color: #ddd;
        display: block;
        padding: 0;
    }

        .cell-btn:hover {
            background-color: #e8e8e8;
        }

    .cell-revealed {
        background-color: #f5f5f5;
    }

</style>

<h3>Гравець: @Model.PlayerName</h3>

<form id="mode-form" method="post" asp-action="SetMode">
    <label>
        <input type="radio" name="currentMode" value="reveal" onchange="this.form.submit()"
        @(Context.Session.GetString("GameMode") != "flag" ? "checked" : "") />
        Відкрити
    </label>
    <label>
        <input type="radio" name="currentMode" value="flag" onchange="this.form.submit()"
        @(Context.Session.GetString("GameMode") == "flag" ? "checked" : "") />
        Прапорець
    </label>
</form>

<div style="display: flex; justify-content: space-between; max-width: 300px; margin-bottom: 10px; font-size: 20px; font-weight: bold;">
    <span style="color: red;">💣 Залишилось: @Model.MinesLeft</span>
    <span id="game-timer" style="color: black;">🕒 00:00</span>
</div>

@if (!Model.Board.IsGameOver && !Model.Board.IsGameWon)
{
    <form id="solver-form" asp-action="SolveNextStep" method="post" style="margin: 10px 0;">
        <button type="submit" class="btn btn-info" id="solver-btn">Підказка від бота</button>
    </form>
}

@if (Model.Board.IsGameOver)
{
    <div style="color: red; font-weight: bold; font-size: 24px; margin: 20px 0;">Гру закінчено!</div>
    <a href="@Url.Action("Index", "Game")" class="btn btn-primary">Грати ще раз</a>
}
else if (Model.Board.IsGameWon)
{
    <div style="color: green; font-weight: bold; font-size: 24px; margin: 20px 0;">Перемога!</div>
    <a href="@Url.Action("Index", "Game")" class="btn btn-primary">Грати ще раз</a>
}



<table class="game-board">
    <tbody>
        @for (int i = 0; i < Model.Board.Height; i++)
        {
            <tr>
                @for (int j = 0; j < Model.Board.Width; j++)
                {
                    var cell = Model.Board.Cells[i][j];
                    <td>
                        @if (cell.IsRevealed || (Model.Board.IsGameOver && cell.IsMine && !cell.IsFlagged))
                        {
                            <div class="cell-revealed">
                                @if (cell.IsMine)
                                {
                                    <span style="@(cell.IsRevealed ? "background-color: red;" : "")">💣</span>
                                }
                                else if (cell.AdjacentMines > 0)
                                {
                                    <span style="color: @(GetNumberColor(cell.AdjacentMines))">@cell.AdjacentMines</span>
                                }
                            </div>
                        }
                        else
                        {
                            <form asp-action="HandleClick" method="post" style="margin:0; padding:0;">
                                <input type="hidden" name="row" value="@i" />
                                <input type="hidden" name="col" value="@j" />
                                <button type="submit" class="cell-btn" disabled="@(Model.Board.IsGameOver || Model.Board.IsGameWon)">
                                    @if (cell.IsFlagged)
                                    {
                                        <span>🚩</span>
                                    }
                                    else
                                    {
                                        <span>&nbsp;</span>
                                    }
                                </button>
                            </form>
                        }
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@functions {
    string GetNumberColor(int number)
    {
        switch (number)
        {
            case 1: return "blue";
            case 2: return "green";
            case 3: return "red";
            case 4: return "darkblue";
            case 5: return "maroon";
            case 6: return "teal";
            case 7: return "black";
            case 8: return "grey";
            default: return "black";
        }
    }
}

<script>
    // --- Глобальні змінні ---
    window.minesweeperTimer = {
        interval: null,
        startTime: null,
        isActive: false
    };

    // --- Функції ---
    function formatTime(totalSeconds) {
        const minutes = String(Math.floor(totalSeconds / 60)).padStart(2, '0');
        const seconds = String(totalSeconds % 60).padStart(2, '0');
        return `🕒 ${minutes}:${seconds}`;
    }

    function updateTimerDisplay() {
        if (!window.minesweeperTimer.isActive) return;

        const now = new Date().getTime();
        const elapsedSeconds = Math.floor((now - window.minesweeperTimer.startTime) / 1000);

        const timerElement = document.getElementById('game-timer');
        if (timerElement) {
            timerElement.innerHTML = formatTime(elapsedSeconds);
        }
    }

    function initializeTimer() {
        // Завжди зупиняємо старий таймер
        if (window.minesweeperTimer.interval) {
            clearInterval(window.minesweeperTimer.interval);
        }

        // Отримуємо дані з сервера
        const isGameActiveFromServer = @Model.IsGameActive.ToString().ToLower();
        const timerElement = document.getElementById('game-timer');

        @if (Model.GameStartTime.HasValue)
    {
        // Якщо гра почалася, встановлюємо час старту
        <text>
                    // Конвертуємо час з C# UTC в мілісекунди JavaScript
                    window.minesweeperTimer.startTime = new Date('@Model.GameStartTime.Value.ToString("o")').getTime();
        </text>
    }
    else
    {
        <text>
            window.minesweeperTimer.startTime = null;
        </text>
    }

        window.minesweeperTimer.isActive = isGameActiveFromServer && window.minesweeperTimer.startTime !== null;

        if (window.minesweeperTimer.isActive) {
            updateTimerDisplay(); // Оновлюємо одразу, щоб показати правильний час
            window.minesweeperTimer.interval = setInterval(updateTimerDisplay, 1000);
        } else if (timerElement) {
            // Якщо гра не почалася або закінчилася, показуємо час з останнього стану
            const elapsedSeconds = window.minesweeperTimer.startTime
                ? Math.floor((new Date().getTime() - window.minesweeperTimer.startTime) / 1000)
                : 0;
            timerElement.innerHTML = formatTime(elapsedSeconds > 0 ? elapsedSeconds : 0);
        }
    }

    // --- Запуск ---
    document.addEventListener('DOMContentLoaded', initializeTimer);
</script>